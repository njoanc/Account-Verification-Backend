{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "User Verification System Application",
    "description": "API documentation for User Verification System Application"
  },
  "paths": {
    "/users/signup": {
      "post": {
        "tags": ["User"],
        "summary": "Create a new user",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },

    "/users/verify/{id}/{token}": {
      "get": {
        "tags": ["User"],
        "summary": "Verify user's email",
        "description": "Verifies the user's email using the provided token",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "Verification token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email verified successfully"
          },
          "400": {
            "description": "Invalid link"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["User"],
        "summary": "Normal login",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/Login"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User Logged in successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/users/{userId}": {
      "patch": {
        "tags": ["User"],
        "summary": "Account Verification",
        "description": "Update user's national ID number, passport number, national ID picture and passport picture",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "User information to update",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "nationalId": {
                    "type": "string",
                    "description": "National ID number of the user"
                  },
                  "passportNumber": {
                    "type": "string",
                    "description": "Passport number of the user"
                  },
                  "nationalIdPic": {
                    "type": "string",
                    "format": "binary",
                    "description": "National ID picture of the user"
                  },
                  "passportPic": {
                    "type": "string",
                    "format": "binary",
                    "description": "Passport picture of the user"
                  }
                },
                "required": []
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],

        "responses": {
          "200": {
            "description": "User information updated successfully"
          },
          "400": {
            "description": "Bad request. Invalid or missing fields"
          },
          "401": {
            "description": "Unauthorized. Access token is missing or invalid"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/reset-password": {
      "post": {
        "tags": ["User"],
        "summary": "Send reset password email",
        "description": "Sends an email with a password reset link to the user's email address",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Email address of the user",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid email address",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/users/reset-password/{token}": {
      "post": {
        "tags": ["User"],
        "summary": "Reset user's password using a reset token.",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Reset user's password using a reset token"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "description": "The new password for the user."
                }
              },
              "required": ["password"]
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Password reset successfully."
          },
          "400": {
            "description": "Invalid or expired reset token."
          },
          "500": {
            "description": "Server error."
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["User"],
        "summary": "Logout",
        "operationId": "logout",

        "responses": {
          "200": {
            "description": "Logout successfully"
          }
        }
      }
    }
  },

  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "googleAuth": {
        "type": "oauth2",
        "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
        "flow": "implicit",
        "scopes": {
          "profile": "Access to user profile information",
          "email": "Access to user email information"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "password": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "age": {
          "type": "number"
        },
        "dateOfBirth": {
          "type": "string"
        },
        "maritalStatus": {
          "type": "string"
        },
        "nationality": {
          "type": "string"
        }
      },
      "required": ["name", "email", "password"]
    },
    "Login": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "password": {
          "type": "string"
        }
      },
      "required": ["email", "password"]
    }
  }
}
